function(subADCWfProc)
function(subApplyCoefficient)
function(subFFT)
function(subSlice)
function(subSampling)
function(subArraySubtraction)
function(subArrayMovingAverage)
function(subArrayStatsVariance)
function(subZero)
function(subArrayCompare)
function(subCopyWaveform)

# BPM
function(fbckSupInit)
function(fbckSupRMSCalc)
function(SaStdCalSupInit)
function(SaStdCalSup)
function(bpmPosXyUnitConvrsion)
function(bpmWfmPolyCoeffCalSup)

function(posPolyCoeffCalSupInit)
function(posPolyCoeffCalSup)
function(bpmPosButtonSum)
#function(bpmWfm_fft_Sup)
# end of BPM

registrar(PSCRegister)
driver(drvPSC)

variable(PSCDebug, int)
variable(PSCTblCtlDebug, int)
variable(PSCInactivityTime, int)
variable(PSCMaxSendBuffer, int)

# PSC wide operations
#  Link: "@pscname"
device(bi, INST_IO, devPSCConnectedBi, "PSC Ctrl Connected")
device(stringin, INST_IO, devPSCMessageSI, "PSC Ctrl Message")
device(bo, INST_IO, devPSCSendAllBo,   "PSC Ctrl Send All")
device(bo, INST_IO, devPSCForceReConn,   "PSC Ctrl Reconnect")
device(longout, INST_IO, devPSCSendLo, "PSC Ctrl Send")
device(longin, INST_IO, devPSCUknCountLi, "PSC Unknown Msg Count")
device(longin, INST_IO, devPSCConnCountLi, "PSC Conn Count")

# Operations on entire blocks
#  Link: "@pscname block#"
#  Link: "@pscname block# offset" (string* records)
#  Link: "@pscname block# offset step"  (Only "* In" DTYPs)
#   (offset and step in byte)
device(stringin,  INST_IO, devPSCBlockSi, "PSC Block")
device(stringout, INST_IO, devPSCBlockSo, "PSC Block")
device(waveform, INST_IO, devPSCBlockInWf8,  "PSC Block I8 In")
device(waveform, INST_IO, devPSCBlockOutWf8, "PSC Block I8 Out")
device(waveform, INST_IO, devPSCBlockInWf16,  "PSC Block I16 In")
device(waveform, INST_IO, devPSCBlockOutWf16, "PSC Block I16 Out")
device(waveform, INST_IO, devPSCBlockInWf32,  "PSC Block I32 In")
device(waveform, INST_IO, devPSCBlockOutWf32, "PSC Block I32 Out")
device(waveform, INST_IO, devPSCBlockInWfF32,  "PSC Block F32 In")
device(waveform, INST_IO, devPSCBlockOutWfF32, "PSC Block F32 Out")
#  Link: "@pscname block# tx|rx"
device(longin, INST_IO, devPSCBlockCountLi, "PSC Block Msg Count")

# Operations on register blocks
#  Link: "@pscname block# regoffset"
#   (offset in bytes)
# Take data from block received from a PSC
device(bi,  INST_IO, devPSCRegBi, "PSC Reg")
device(mbbi,  INST_IO, devPSCRegMbbi, "PSC Reg")
device(mbbiDirect,  INST_IO, devPSCRegMbbiDirect, "PSC Reg")
device(longin,  INST_IO, devPSCRegLi, "PSC Reg")
device(ai,  INST_IO, devPSCRegAi, "PSC Reg")
device(ai,  INST_IO, devPSCRegF32Ai, "PSC Reg F32")

# Put data into a block to be sent (later) to a PSC
#  Link: "@pscname block# regoffset"
#   (offset in bytes)
device(bo,  INST_IO, devPSCRegBo, "PSC Reg")
device(mbbo,  INST_IO, devPSCRegMbbo, "PSC Reg")
device(mbboDirect,  INST_IO, devPSCRegMbboDirect, "PSC Reg")
device(longout,  INST_IO, devPSCRegLo, "PSC Reg")
device(ao,  INST_IO, devPSCRegAo, "PSC Reg")
device(ao,  INST_IO, devPSCRegF32Ao, "PSC Reg F32")

# Echo back data placed in a send block
#  Link: "@pscname block# regoffset"
#   (offset in bytes)
device(bi,  INST_IO, devPSCRegRBBi, "PSC RB Reg")
device(mbbi,  INST_IO, devPSCRegRBMbbi, "PSC RB Reg")
device(mbbiDirect,  INST_IO, devPSCRegRBMbbiDirect, "PSC RB Reg")
device(longin,  INST_IO, devPSCRegRBLi, "PSC RB Reg")
device(ai,  INST_IO, devPSCRegRBAi, "PSC RB Reg")
device(ai,  INST_IO, devPSCRegRBF32Ai, "PSC RB Reg F32")

# Single register writes
#  Link: "@pscname block# regoffset"
#   (offset in bytes)
device(bo, INST_IO, devPSCSingleU32Bo, "PSC Single U32")
device(mbbo, INST_IO, devPSCSingleU32Mbbo, "PSC Single U32")
device(mbboDirect, INST_IO, devPSCSingleU32MbboDirect, "PSC Single U32")
device(longout, INST_IO, devPSCSingleS32Lo, "PSC Single I32")
device(ao, INST_IO, devPSCSingleS32Ao, "PSC Single I32")
device(ao, INST_IO, devPSCSingleF32Ao, "PSC Single F32")


# PSC table
device(waveform, INST_IO, devPSCTblOutWfTG,  "PSC Target Table")
device(mbbo,     INST_IO, devPSCTblMbboMode, "PSC Table Mode")
device(ao,       INST_IO, devPSCTblAo1Mode,  "PSC Table Max Delta 1")
device(ao,       INST_IO, devPSCTblAo2Mode,  "PSC Table Max Delta 2")
device(longout,  INST_IO, devPSCTblLoStart,  "PSC Transient Start")

device(mbbiDirect, INST_IO, devPSCTblMbbiDirectAlarms, "PSC Table Alarm Bits")


